#!/usr/bin/env bash

set -eu

BASE_DIR="$(cd "$(dirname $0)/.." > /dev/null; pwd)"
TMP_DIR="$BASE_DIR/tmp"
DATASET_DIR="$TMP_DIR/dataset"

DATASET_ID_FILE="$TMP_DIR/dataset_id"
TRAINING_SET="$TMP_DIR/training_set.txt"
VALIDATION_SET="$TMP_DIR/validation_set.txt"
NAMES="$BASE_DIR/data/coco.names"

die() {
    echo "$1" >&2
    exit 1
}

say() {
    local color=4
    case $1 in
        add) color=5 ;;
        exist) color=3;;
        create) color=2;;
    esac

    printf "%s%12s%s %s\n" $(tput setaf $color) "$1" $(tput sgr0) "$2" | \
    sed "s|$DATASET_DIR/||" | \
    sed "s|$BASE_DIR/||" >&2
}

copy-sample() {
    while read -r f; do
        basename="$(basename $f)"
        dst="$DATASET_DIR/images/$basename"
        cp "$f" "$dst"
        say add "$dst"
        src="$(echo "$f" | sed 's/images/labels/' | sed 's/jpg/txt/')"
        dst="$DATASET_DIR/labels/${basename/jpg/txt}"
        cp "$src" "$dst"
        say add "$dst"
        echo "images/$basename"
    done
}

if [[ -e $DATASET_ID_FILE ]]; then
    say exist $DATASET_ID_FILE
    # exit 1
fi

rm -rf "$DATASET_DIR"
mkdir "$DATASET_DIR"
mkdir "$DATASET_DIR/images"
mkdir "$DATASET_DIR/labels"

cat $TRAINING_SET | copy-sample > "$DATASET_DIR/training_set.txt"
cat $VALIDATION_SET | copy-sample > "$DATASET_DIR/validation_set.txt"
cp "$NAMES" "$DATASET_DIR/names"

clearml-data create --project "PyTorch Yolo" --name dataset
DATASET_ID="$(cat ~/.clearml_data.json | jq -r '.id')"

clearml-data add --id "$DATASET_ID" --files "$DATASET_DIR"
clearml-data close --id "$DATASET_ID"

echo "$DATASET_ID" > "$DATASET_ID_FILE"

say create "$DATASET_ID_FILE"
echo "done."
